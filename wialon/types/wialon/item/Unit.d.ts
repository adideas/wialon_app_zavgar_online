import { Item } from './Item'
import { Data } from '../../qx/event/type/Data'

export interface Unit extends Item {
  constructor(obj: Object, dataFlags: Number): Unit;
  changeAccessPassword: Data;
  changeCalcFlags: Data;
  changeCommands: Data;
  changeDeviceTypeId: Data;
  changeDriverCode: Data;
  changeEngineHoursCounter: Data;
  changeLastMessage: Data;
  changeMessageParams: Data;
  changeMileageCounter: Data;
  changeNetConn: Data;
  changePhoneNumber: Data;
  changePhoneNumber2: Data;
  changePosition: Data;
  changeTrafficCounter: Data;
  changeUniqueId: Data;
  changeUniqueId2: Data;
  checkHwConfig(hwId: Number, callback: Function): void;
  getHwParams(unitId: Number, hwId: number, full: number, callback: Function): void;
  registerProperties(): void;
  remoteUpdateAccessPassword(item: Object, val: String): void;
  remoteUpdateCalcFlags(item: Object, val: Number): void;
  remoteUpdateCommands(item: Object, val: String): void;
  remoteUpdateDeviceTypeId(item: Object, val: Number): void;
  remoteUpdateDriverCode(item: Object, val: String): void;
  remoteUpdateEngineHoursCounter(item: Object, val: Number): void;
  remoteUpdateLastMessage(item: Object, val: Object): void;
  remoteUpdateMessageParams(item: Object, val: Object): void;
  remoteUpdateMileageCounter(item: Object, val: Number): void;
  remoteUpdateNetConn(item: Object, val: Number): void;
  remoteUpdatePhoneNumber(item: Object, val: Number): void;
  remoteUpdatePhoneNumber2(item: Object, val: Number): void;
  remoteUpdatePosition(item: Object, val: Object): void;
  remoteUpdateTrafficCounter(item: Object, val: Number): void;
  remoteUpdateUniqueId(item: Object, val: Number): void;
  remoteUpdateUniqueId2(item: Object, val: Number): void;
  accessFlag(): any;
  calcFlag(): any;
  dataFlag(): any;
  dataMessageFlag(): any;
  driverActivitySource(): any;
  eventMessageFlag(): any;
  execCmdFlag(): any;
  logMessageAction(): any;
  accessPassword(): String;
  calcFlags(): number;
  commands(): Array;
  deviceTypeId(): number;
  driverCode(): String;
  engineHoursCounter(): number;
  lastMessage(): Object;
  messageParams(): Object;
  mileageCounter(): number;
  netConn(): number;
  phoneNumber(): String;
  phoneNumber2(): String;
  position(): Object;
  prevMessage(): Object;
  trafficCounter(): number;
  uniqueId(): String;
  uniqueId2(): String;
  changeAccount(params: Object, callback: Function): void;
  downloadHwParamFile(hwId: number, fileId: number, callback: Function): void;
  getAccessPassword(): String;
  getCalcFlags(): number;
  getCommands(): Array;
  getDeviceTypeId(): number;
  getDriverActivitySettings(callback: Function): void;
  getDriverCode(): String;
  getEngineHoursCounter(): number;
  getLastMessage(): Object;
  getMessageImageUrl(time: number, msgIndex: number, nocache: Number): String;
  getMessageParams(): Object;
  getMileageCounter(): number;
  getNetConn(): number;
  getPhoneNumber(): String;
  getPhoneNumber2(): String;
  getPosition(): Object;
  getPrevMessage(): Object;
  getTrafficCounter(): number;
  getUniqueId(): String;
  getUniqueId2(): String;
  handleMessage(msg: Message): void;
  remoteCommand(commandName: String, linkType: String, param: String, timeout: number, flags: number, callback: Function): void;
  remoteCommandDefinitions(params: Object, callback: Function): void;
  resetAccessPassword(): void;
  resetCalcFlags(): void;
  resetCommands(): void;
  resetDeviceTypeId(): void;
  resetDriverCode(): void;
  resetEngineHoursCounter(): void;
  resetLastMessage(): void;
  resetMessageParams(): void;
  resetMileageCounter(): void;
  resetNetConn(): void;
  resetPhoneNumber(): void;
  resetPhoneNumber2(): void;
  resetPosition(): void;
  resetPrevMessage(): void;
  resetTrafficCounter(): void;
  resetUniqueId(): void;
  resetUniqueId2(): void;
  setAccessPassword(value: String): String;
  setCalcFlags(value: number): number;
  setCommands(value: Array): Array;
  setDeviceTypeId(value: number): number;
  setDriverCode(value: String): String;
  setEngineHoursCounter(value: number): number;
  setLastMessage(value: Object): Object;
  setMessageParams(value: Object): Object;
  setMileageCounter(value: number): number;
  setNetConn(value: number): number;
  setPhoneNumber(value: String): String;
  setPhoneNumber2(value: String): String;
  setPosition(value: Object): Object;
  setPrevMessage(value: Object): Object;
  setTrafficCounter(value: number): number;
  setUniqueId(value: String): String;
  setUniqueId2(value: String): String;
  updateAccessPassword(accessPassword: String, callback: Function): void;
  updateCalcFlags(newValue: number, callback: Function): void;
  updateDeviceSettings(deviceTypeId: number, uniqueId: String, callback: Function): void;
  updateDriverActivitySettings(sourceType: number, callback: Function): void;
  updateEngineHoursCounter(newValue: number, callback: Function): void;
  updateHwParams(hwId: number, params: Object, file_inputs: String, callback: Function): void;
  updateMileageCounter(newValue: number, callback: Function): void;
  updatePhoneNumber(phoneNumber: String, callback: Function): void;
  updatePhoneNumber2(phoneNumber: String, callback: Function): void;
  updateTrafficCounter(newValue: number, regReset: number, callback: Function): void;
  updateUniqueId2(uniqueId2: any, callback: Function): void;
  initAccessPassword(value: String): String;
  initCalcFlags(value: number): number;
  initCommands(value: Array): Array;
  initDeviceTypeId(value: number): number;
  initDriverCode(value: String): String;
  initEngineHoursCounter(value: number): number;
  initLastMessage(value: Object): Object;
  initMessageParams(value: Object): Object;
  initMileageCounter(value: number): number;
  initNetConn(value: number): number;
  initPhoneNumber(value: String): String;
  initPhoneNumber2(value: String): String;
  initPosition(value: Object): Object;
  initPrevMessage(value: Object): Object;
  initTrafficCounter(value: number): number;
  initUniqueId(value: String): String;
  initUniqueId2(value: String): String;
}
