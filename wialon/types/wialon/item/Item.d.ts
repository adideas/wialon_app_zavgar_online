import { Object } from '../../qx/core/Object'
import { Data } from '../../qx/event/type/Data'

export interface Item extends Object {
  constructor(obj: Object, dataFlags: Number): Item;
  changeCustomProperty: Data;
  changeDataFlags: Data;
  changeFtpProperty: Data;
  changeMeasureUnits: Data;
  changeName: Data;
  changeUserAccess: Data;
  itemDeleted: Event;
  messageRegistered: Data;
  registerProperties(): void;
  remoteUpdateAccountId(item: Object, val: Number): void;
  remoteUpdateCreationTime(item: Object, val: Number): void;
  remoteUpdateCreatorId(item: Object, val: Number): void;
  remoteUpdateCustomProp(item: Object, val: Array): void;
  remoteUpdateCustomProps(item: Object, val: String): void;
  remoteUpdateMeasureUnits(item: Object, val: number): void;
  remoteUpdateName(item: Object, val: String): void;
  remoteUpdateUserAccess(item: Object, val: Number): void;
  accessFlag(): any;
  dataFlag(): any;
  fileContentType(): any;
  fileStorageType(): any;
  fileWriteType(): any;
  logMessageAction(): any;
  measureUnitsFlag(): any;
  measureUnitsType(): any;
  messageFlag(): any;
  accountId(): number;
  creationTime(): number;
  creatorId(): number;
  customProps(): Object;
  dataFlags(): number;
  ftpProps(): Object;
  measureUnits(): number;
  name(): String;
  userAccess(): number;
  addLogRecord(action: String, newValue: String, oldValue: String, callback: Function): void;
  fileGet(storageType: number, path: String): String;
  fileList(storageType: number, path: String, mask: String, recursive: Boolean, fullPath: any, callback: Function): void;
  fileMkdir(storageType: number, path: String, callback: Function): void;
  filePut(storageType: number, path: String, file: Object, writeType: number, timeout: number, callback: Function): void;
  fileRead(storageType: number, path: String, contentType: number, callback: Function): void;
  fileRm(storageType: number, path: String, callback: Function): void;
  fileWrite(storageType: number, path: String, content: String, writeType: number, contentType: number, callback: Function): void;
  getAccountId(): number;
  getBackup(fileId: String, callback: Function): void;
  getCreationTime(): number;
  getCreatorId(): number;
  getCustomProperty(propName: String, defaultVal: String): String;
  getCustomProps(): Object;
  getDataFlags(): number;
  getFtpProperty(propName: String, defaultVal: String): String;
  getFtpProps(): Object;
  getId(): number;
  getMeasureUnits(): number;
  getName(): String;
  getType(): String;
  getUserAccess(): number;
  handleMessage(msg: String): void;
  listBackups(callback: Function): void;
  resetAccountId(): void;
  resetCreationTime(): void;
  resetCreatorId(): void;
  resetCustomProps(): void;
  resetDataFlags(): void;
  resetFtpProps(): void;
  resetMeasureUnits(): void;
  resetName(): void;
  resetUserAccess(): void;
  restoreIcons(params: Object, callback: Function): void;
  setAccountId(value: number): number;
  setCreationTime(value: number): number;
  setCreatorId(value: number): number;
  setCustomProperty(propName: String, propValue: String): void;
  setCustomProps(value: Object): Object;
  setDataFlags(value: number): number;
  setFtpProperty(propName: String, propValue: String): void;
  setFtpProps(value: Object): Object;
  setMeasureUnits(value: number): number;
  setName(value: String): String;
  setUserAccess(value: number): number;
  updateCustomProperty(propName: String, propValue: String, callback: Function): void;
  updateFtpProperty(ftp: Object, callback: Function): void;
  updateMeasureUnits(type: Number, flags: Number, callback: Function): void;
  updateName(name: String, callback: Function): void;
  _onUpdateProperties(callback: Function, code: number, result: Object): void;
  initAccountId(value: number): number;
  initCreationTime(value: number): number;
  initCreatorId(value: number): number;
  initCustomProps(value: Object): Object;
  initDataFlags(value: number): number;
  initFtpProps(value: Object): Object;
  initMeasureUnits(value: number): number;
  initName(value: String): String;
  initUserAccess(value: number): number;
  __onUpdateCustomProperty(callback: Function, code: number, result: Object): void;
  __onUpdateFtpProperty(callback: any, code: any, result: any): void;
}
